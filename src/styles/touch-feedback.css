:root {
  --touch-feedback-color: rgba(0, 0, 0, 0.05);
  --touch-active-opacity: 0.9;
  --touch-transition-duration: 150ms;
}

/* Apply to interactive elements */
.touch-feedback {
  position: relative;
  overflow: hidden;
}

.touch-feedback::after {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--touch-feedback-color);
  opacity: 0;
  transition: opacity var(--touch-transition-duration) ease-out;
  pointer-events: none;
}

.touch-feedback:active::after {
  opacity: 1;
}

/* For elements that need scrolling but should still block map interaction */
.drawer-block-map {
  touch-action: pan-y; /* Allow vertical scrolling */
  -webkit-user-select: none;
  user-select: none;
  pointer-events: auto !important;
  will-change: transform; /* Optimize for hardware acceleration */
  position: relative; /* Ensure stacking context */
  z-index: var(--z-drawer-content);
  -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
}

/* For elements that should block ALL interaction (non-scrollable areas) */
.drawer-block-all {
  touch-action: none; /* Prevent all touch actions */
  -webkit-user-select: none;
  user-select: none;
  pointer-events: auto !important;
  position: relative;
  z-index: var(--z-drawer-content);
}

/* Ensure text elements participate properly in scrolling only in full drawer state */
.touchable-text {
  pointer-events: auto !important;
  user-select: text; /* Allow text selection if desired */
  -webkit-user-select: text;
}

/* Different behavior based on drawer state */
.drawer-no-scroll .touchable-text {
  touch-action: none !important; /* Prevent scrolling */
  pointer-events: auto !important;
  user-select: none; /* Prevent text selection in partial drawer */
  -webkit-user-select: none;
}

/* Full drawer state allows text scrolling */
.z-drawer-container[style*="top: 0"] .touchable-text,
.z-drawer-container.translate-y-0:not(.drawer-no-scroll) .touchable-text {
  touch-action: pan-y !important; /* Allow vertical scrolling */
}

/* Container for scrollable content sections */
.drawer-content-section {
  width: 100%;
  position: relative;
  touch-action: pan-y;
  -webkit-overflow-scrolling: touch;
}

/* Additional classes for different drawer elements */
.z-drawer-container {
  touch-action: pan-x pan-y; /* Allow vertical scrolling within drawer */
  pointer-events: auto !important;
  will-change: transform;
  backface-visibility: hidden; /* Improve performance */
}

/* Ensure proper scrolling in the drawer's full state */
.z-drawer-container[style*="top: 0"] .drawer-block-map,
.z-drawer-container.translate-y-0:not(.h-\[var\(--mobile-drawer-partial-height\,50vh\)\]) .drawer-block-map {
  overflow-y: auto !important;
  -webkit-overflow-scrolling: touch !important;
  touch-action: pan-y !important;
}

/* Ensure NO scrolling in the drawer's partial state */
.z-drawer-container.h-\[var\(--mobile-drawer-partial-height\,50vh\)\] .drawer-block-map,
.drawer-no-scroll {
  overflow-y: hidden !important;
  touch-action: none !important;
  -webkit-overflow-scrolling: none !important;
}

/* Style for map container when blocked */
.map-blocked {
  pointer-events: none !important; /* Prevent all interactions */
  touch-action: none !important;
  user-select: none !important;
}